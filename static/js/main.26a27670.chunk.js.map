{"version":3,"sources":["todoitems.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItems","props","listitems","items","map","item","className","type","spellcheck","id","key","value","text","onChange","e","updateItem","target","icon","onClick","deleteItem","date","duration","easing","library","add","faTrash","App","d","Date","getDate","getMonth","getFullYear","state","currentItem","handleInput","bind","addItem","this","setState","now","preventDefault","current","console","log","newItems","filtereditems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26a27670.chunk.js","sourcesContent":["import React from 'react';\r\nimport './todoitems.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport Flipmove from 'react-flip-move';\r\nfunction TodoItems(props){\r\n    \r\n        const items = props.items;\r\n        const listitems=items.map(item=>{\r\n            return(\r\n            \r\n                <div className=\"list\" key={item.key}>\r\n                    <p>\r\n                        <input type=\"textarea\" spellcheck=\"false\" id={item.key} value={item.text} \r\n                        onChange={(e)=>props.updateItem(e.target.value,item.key)} />\r\n                        \r\n                    <span>\r\n                        <FontAwesomeIcon className=\"faicon\" icon=\"trash\"\r\n                        onClick={()=>props.deleteItem(item.key)}/>\r\n\r\n                        \r\n                    </span>\r\n                    <h4 id=\"dateid\">{props.date}</h4>\r\n                    \r\n</p>\r\n                    \r\n                \r\n                </div>\r\n            )\r\n        })\r\n        return(\r\n        <div>\r\n            <Flipmove duration={300} easing=\"ease-in-out\">{listitems}</Flipmove>\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n    \r\n}\r\n\r\nexport default TodoItems;","import React from 'react';\nimport './App.css';\nimport {library, text} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nimport TodoItems from './todoitems';\nlibrary.add(faTrash);\n\n\n\nclass App extends React.Component\n {\n   constructor(props){\n     super(props);\n     var d = new Date();\n       var date=\" \"+d.getDate()+\" : \"+(d.getMonth()+1) +\" : \"+d.getFullYear();\n     this.state={\n       items:[],\n       currentItem:{\n         text:'',\n         key:'',\n        \n       },\n       date:date\n     }\n     \n     this.handleInput=this.handleInput.bind(this);\n     this.addItem=this.addItem.bind(this);\n     this.deleteItem=this.deleteItem.bind(this);\n     this.updateItem=this.updateItem.bind(this);\n   }\n  \n\n     handleInput(e){\n       this.setState({\n         currentItem:{\n         text:e.target.value,\n         key:Date.now(),\n\n         \n         }\n       \n     })\n   }\n   addItem(e){\n     e.preventDefault();\n     const current=this.state.currentItem;\n     console.log(current);\n     if(current.text!==\"\"){\n       const newItems=[...this.state.items,current];\n       this.setState({\n         items:newItems,\n         currentItem:{\n           text:\"\",\n           key:\"\",\n\n         }\n       })\n     }\n    }\n     deleteItem(key){\n       const filtereditems=this.state.items.filter(item=>item.key!==key);\n     \n     this.setState({\n       items:filtereditems\n     })\n    }\n    updateItem(text,key){\n      const items=this.state.items;\n      items.map(item=>{\n        if(item.key===key){\n          item.text=text;\n\n        }\n      })\n      this.setState({\n        items:items\n      })\n    }\n\n  \n  \n   render(){\n  return (\n    <div>\n    <h2 id=\"title\">YOUR UPCOMING EVENTS</h2>\n    <h4 id=\"date\">DATE:{this.state.date}</h4>\n    <div className=\"App\">\n    <header>\n      <form id=\"todolist\" onSubmit={this.addItem}>\n        <input type=\"text\" spellcheck=\"false\" placeholder=\"Enter your task\"\n        value={this.state.currentItem.text} onChange={this.handleInput}/>\n        <button type=\"submit\" >Add</button>\n      </form>\n    </header>\n    <TodoItems items={this.state.items} deleteItem={this.deleteItem} updateItem={this.updateItem} date={this.state.date}></TodoItems>\n    </div>\n    </div>\n  );\n}\n\n }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}